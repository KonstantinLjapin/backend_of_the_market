services:
  api_fast_api:
    build: .
    env_file:
      - ./.env
    container_name: ${API_CONTAINER_NAME}
    command: >
      bash -c "
        echo 'Ожидание готовности базы данных...';
        sleep 15;
        echo 'Генерация миграций Alembic...';
        alembic revision --autogenerate -m \"autogenerated_$(date +%s)\" || echo 'No changes detected';
        echo 'Применение миграций...';
        alembic upgrade head;
        
        echo 'Запуск приложения...';
        ls
        python3.12 src/main.py
      "
    user: root  # Явно указываем пользователя root
    volumes:
      - ./dump/app:/usr/src/app
    ports:
      - "8080:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - market_backend

  db:
    container_name: ${DB_CONTAINER_NAME}
    image: postgres:15.0-alpine
    command:
      - "postgres"
      - "-c"
      - "log_statement=all"
    env_file:
      - ./.env
    volumes:
      - ./dump/postgres:/var/lib/postgresql/data:z  # Монтирование данных БД
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - market_backend

networks:
  market_backend:
    external: true